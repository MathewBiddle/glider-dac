version: '2.1'

services:
  glider-dac-providers-app: &provider_anchor
    container_name: glider-dac-providers-app
    restart: always
    image: ioos/glider-dac:latest
    #build:
    #  context: .
    #  args:
    #    glider_gid_uid: 501
    ports:
      - 3000:5000
    volumes:
      - ./config.local.yml:/glider-dac/config.local.yml
      - /data:/data
      - /scratch/:/scratch/
      - ./logs/:/glider-dac/logs/
      - /home/glider/glider-dac/users.db:/glider-dac/users.db
      - ./scripts/config.py:/glider-dac/scripts/config.py
        #- .:/glider-dac/  # For local development
    #command: flask run
    depends_on:
      - mongo
      - redis

  glider-dac-worker:
    <<: *provider_anchor
    container_name: glider-dac-worker
    command: python glider_dac/worker.py
    ports: []

  glider-dac-watchdog:
    <<: *provider_anchor
    container_name: glider-dac-watchdog
    command: python glider_dac_watchdog.py
    ports: []
    # Update DATA_ROOT to point to ERDDAP directory
    environment:
      #- DATA_ROOT=/data/data/priv_erddap
      - DATA_ROOT=/data/submission
      - FLAGS_DIR=/scratch/tomcat-erddap-private/flag

  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - mongo_storage:/data/db
      - mongo_config:/data/configdb

  # TODO: THREDDS and ERDDAP will need volume configurations
  thredds:
    container_name: thredds
    image: unidata/thredds-docker:4.6.14
    ports:
      - 8082:8080

  erddap:
    container_name: erddap
    image: axiom/docker-erddap
    ports:
      - 8080:8080
    volumes:
      - /var/tomcats/tomcat-erddap-private/content/erddap/setup.xml:/usr/local/tomcat/content/erddap/setup.xml
      - /var/tomcats/tomcat-erddap-private/content/erddap/datasets.xml:/usr/local/tomcat/content/erddap/datasets.xml
      - /data:/data
      - /scratch/:/scratch/

  redis:
    container_name: redis
    restart: always
    image: redis
    volumes:
      - redis_data:/data

volumes:
  mongo_storage:
  mongo_config:
  redis_data:
